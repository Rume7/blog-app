version: '3.8'

services:
  postgres:
    image: 'postgres:17.0-alpine'
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - blog-network
    deploy:
      resources:
        limits:
          memory: 1G

  redis:
    image: redis:7.2-alpine
    container_name: blog-redis
    ports:
      - "6379:6379"
    networks:
      - blog-network

  app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    networks:
      - blog-network
    ports:
      - "8080:8080"
    restart: always
    command: ["java", "-jar", "/app.jar"]

networks:
  blog-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local